<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>resumeGame_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("playerData.ini");
globalvar playername, highestScore, class, stageID, stageScore, scoreMul, currentHS;

ini_close();ini_open("playerData.ini");

if ( ini_key_exists( "save01", "Player" ) == false )
{
    global.playername = get_string("what is your playername?","Clarkie");
    ini_write_string( "save01", "Player", global.playername);
    global.highestScore = ini_write_real("save01","HighestScore",0);
    global.class = ini_write_string("save01","Class","Freshman");
    global.stageID = ini_write_real("save01","stageID",0);
    global.stageScore = ini_write_real("save01","stageScore",0);
    global.scoreMul = ini_write_real("save01","scoreMul",1);
}
global.playername = ini_read_string( "save01", "Player", "Clarkie");
global.highestScore = ini_read_real("save01","HighestScore",0);
global.class = ini_read_string("save01","Class","Freshman");
global.stageID = ini_read_real("save01","stageID",0);
global.stageScore = ini_read_real("save01","stageScore",0);
show_message(stageScore);
global.scoreMul = ini_read_real("save01","scoreMul",1);
score = global.stageScore;
ini_close();


switch (global.stageID) //will automatically load room depends on where the player left off last time
   {
   case 0: room_goto(room_test); break;//only for beta
   case 1: room_goto(wright); break;//
   case 2: room_goto(bullock); break;//
   case 3: room_goto(atwood_jefferson); break;
   case 4: room_goto(jonas_clark); break;
   case 5: room_goto(jsc); break;
   case 6: room_goto(dodd); break;
   case 7: room_goto(dana); break;
   case 8: room_goto(dana_commons); break;
   case 9: room_goto(hughes); break;
   case 10: room_goto(blackstone); break;
   case 11: room_goto(lasry); break;
   case 12: room_goto(maywood); break;
   case 13: room_goto(bp_sackler); break;
   case 14: room_goto(little_center); break;
   case 15: room_goto(carlson_hall); break;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>110,110</point>
  </PhysicsShapePoints>
</object>
